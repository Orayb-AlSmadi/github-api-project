{"ast":null,"code":"var _jsxFileName = \"/home/owner/Desktop/Coding/github-api-project/src/App.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport Search from \"./components/search.js\";\nimport Row from \"./components/Row\";\nimport List from \"./components/list\";\nimport Details from \"./components/details\";\n\nclass mainApp extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      githubData: [],\n      id: 0\n    };\n\n    this.clickHandler = i => {\n      this.setState({\n        id: i\n      });\n    };\n\n    this.searchRequest = s => {\n      let request = \"https://api.github.com/users/\".concat(s, \"/repos\");\n      axios.get(request).then(response => {\n        Array.isArray(response.data) ? this.setState({\n          githubData: response.data.slice(1, 6),\n          id: 0\n        }) : this.setState({\n          githubData: \"User is not Found\",\n          id: 0\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"github API\"), React.createElement(Search, {\n      className: \"top\",\n      searchRequest: this.searchRequest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), console.log(this.state.githubData), React.createElement(\"div\", {\n      className: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      class: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"#of repos\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"name of the repo\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"repo state\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"check,private\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"private\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"language\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \" url \"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.githubData.map((repo, index) => {\n      return React.createElement(Row, {\n        id: index + 1,\n        name: repo.name,\n        private: repo.private,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      });\n    })))));\n  }\n\n}\n\nexport default mainApp;","map":{"version":3,"sources":["/home/owner/Desktop/Coding/github-api-project/src/App.js"],"names":["React","Component","axios","Search","Row","List","Details","mainApp","state","githubData","id","clickHandler","i","setState","searchRequest","s","request","get","then","response","Array","isArray","data","slice","catch","error","console","log","render","map","repo","index","name","private"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport Search from \"./components/search.js\";\nimport Row from \"./components/Row\";\nimport List from \"./components/list\";\nimport Details from \"./components/details\";\n\nclass mainApp extends Component {\n  state = {\n    githubData: [],\n    id: 0\n  };\n\n  // componentDidMount() {\n  //   let request = `https://api.github.com/users/sqoor/repos`;\n\n  //   axios\n  //     .get(request)\n  //     .then(response => {\n  //       this.setState({ githubData: response.data.slice(0,5) });\n  //     })\n  //     .catch(error => {\n  //       console.log(error);\n  //     });\n  // }\n\n  clickHandler = i => {\n    this.setState({ id: i });\n  };\n\n  searchRequest = s => {\n    let request = `https://api.github.com/users/${s}/repos`;\n    axios\n      .get(request)\n      .then(response => {\n        Array.isArray(response.data)\n          ? this.setState({ githubData: response.data.slice(1, 6), id: 0 })\n          : this.setState({ githubData: \"User is not Found\", id: 0 });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>github API</h1>\n        <Search className=\"top\" searchRequest={this.searchRequest} />\n\n        {console.log(this.state.githubData)}\n        <div className=\"bottom\">\n          <table class=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">#of repos</th>\n                <th scope=\"col\">name of the repo</th>\n                <th scope=\"col\">repo state</th>\n                <th scope=\"col\">check,private</th>\n                <th scope=\"col\">private</th>\n                <th scope=\"col\">language</th>\n                <th scope=\"col\"> url </th>\n              </tr>\n            </thead>\n\n            <tbody>\n            {this.state.githubData.map((repo, index) => {\n               return <Row id={index+1} name={repo.name} private={repo.private}/>;\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default mainApp;\n"]},"metadata":{},"sourceType":"module"}